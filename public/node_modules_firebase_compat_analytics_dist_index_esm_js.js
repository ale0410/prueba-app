"use strict";
(self["webpackChunkapp"] = self["webpackChunkapp"] || []).push([["node_modules_firebase_compat_analytics_dist_index_esm_js"],{

/***/ 3211:
/*!******************************************************************!*\
  !*** ./node_modules/firebase/compat/analytics/dist/index.esm.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _firebase_analytics_compat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @firebase/analytics-compat */ 1888);


/***/ }),

/***/ 1888:
/*!***************************************************************************!*\
  !*** ./node_modules/@firebase/analytics-compat/dist/esm/index.esm2017.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "registerAnalytics": () => (/* binding */ registerAnalytics)
/* harmony export */ });
/* harmony import */ var _firebase_app_compat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @firebase/app-compat */ 5003);
/* harmony import */ var _firebase_analytics__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @firebase/analytics */ 9511);
/* harmony import */ var _firebase_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @firebase/component */ 4692);



const name = "@firebase/analytics-compat";
const version = "0.1.13";
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

class AnalyticsService {
  constructor(app, _delegate) {
    this.app = app;
    this._delegate = _delegate;
  }

  logEvent(eventName, eventParams, options) {
    (0,_firebase_analytics__WEBPACK_IMPORTED_MODULE_1__.logEvent)(this._delegate, eventName, eventParams, options);
  }
  /**
   * @deprecated Use {@link logEvent} with `eventName` as 'screen_view' and add relevant `eventParams`.
   * See {@link https://firebase.google.com/docs/analytics/screenviews | Track Screenviews}.
   */


  setCurrentScreen(screenName, options) {
    (0,_firebase_analytics__WEBPACK_IMPORTED_MODULE_1__.setCurrentScreen)(this._delegate, screenName, options);
  }

  setUserId(id, options) {
    (0,_firebase_analytics__WEBPACK_IMPORTED_MODULE_1__.setUserId)(this._delegate, id, options);
  }

  setUserProperties(properties, options) {
    (0,_firebase_analytics__WEBPACK_IMPORTED_MODULE_1__.setUserProperties)(this._delegate, properties, options);
  }

  setAnalyticsCollectionEnabled(enabled) {
    (0,_firebase_analytics__WEBPACK_IMPORTED_MODULE_1__.setAnalyticsCollectionEnabled)(this._delegate, enabled);
  }

}
/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Officially recommended event names for gtag.js
 * Any other string is also allowed.
 */


var EventName;

(function (EventName) {
  EventName["ADD_SHIPPING_INFO"] = "add_shipping_info";
  EventName["ADD_PAYMENT_INFO"] = "add_payment_info";
  EventName["ADD_TO_CART"] = "add_to_cart";
  EventName["ADD_TO_WISHLIST"] = "add_to_wishlist";
  EventName["BEGIN_CHECKOUT"] = "begin_checkout";
  /**
   * @deprecated
   * This event name is deprecated and is unsupported in updated
   * Enhanced Ecommerce reports.
   */

  EventName["CHECKOUT_PROGRESS"] = "checkout_progress";
  EventName["EXCEPTION"] = "exception";
  EventName["GENERATE_LEAD"] = "generate_lead";
  EventName["LOGIN"] = "login";
  EventName["PAGE_VIEW"] = "page_view";
  EventName["PURCHASE"] = "purchase";
  EventName["REFUND"] = "refund";
  EventName["REMOVE_FROM_CART"] = "remove_from_cart";
  EventName["SCREEN_VIEW"] = "screen_view";
  EventName["SEARCH"] = "search";
  EventName["SELECT_CONTENT"] = "select_content";
  EventName["SELECT_ITEM"] = "select_item";
  EventName["SELECT_PROMOTION"] = "select_promotion";
  /** @deprecated */

  EventName["SET_CHECKOUT_OPTION"] = "set_checkout_option";
  EventName["SHARE"] = "share";
  EventName["SIGN_UP"] = "sign_up";
  EventName["TIMING_COMPLETE"] = "timing_complete";
  EventName["VIEW_CART"] = "view_cart";
  EventName["VIEW_ITEM"] = "view_item";
  EventName["VIEW_ITEM_LIST"] = "view_item_list";
  EventName["VIEW_PROMOTION"] = "view_promotion";
  EventName["VIEW_SEARCH_RESULTS"] = "view_search_results";
})(EventName || (EventName = {}));
/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


const factory = container => {
  // Dependencies
  const app = container.getProvider('app-compat').getImmediate();
  const analyticsServiceExp = container.getProvider('analytics').getImmediate();
  return new AnalyticsService(app, analyticsServiceExp);
};

function registerAnalytics() {
  const namespaceExports = {
    Analytics: AnalyticsService,
    settings: _firebase_analytics__WEBPACK_IMPORTED_MODULE_1__.settings,
    isSupported: _firebase_analytics__WEBPACK_IMPORTED_MODULE_1__.isSupported,
    // We removed this enum in exp so need to re-create it here for compat.
    EventName
  };
  _firebase_app_compat__WEBPACK_IMPORTED_MODULE_0__["default"].INTERNAL.registerComponent(new _firebase_component__WEBPACK_IMPORTED_MODULE_2__.Component('analytics-compat', factory, "PUBLIC"
  /* PUBLIC */
  ).setServiceProps(namespaceExports).setMultipleInstances(true));
}

registerAnalytics();
_firebase_app_compat__WEBPACK_IMPORTED_MODULE_0__["default"].registerVersion(name, version);


/***/ })

}]);
//# sourceMappingURL=node_modules_firebase_compat_analytics_dist_index_esm_js.js.map